name: Build and Release CloudOTP Application

on:
  push:
    tags:
      - 'v*.*.*'  # 仅在 push tags 时触发工作流

jobs:
  # Android 构建任务
  android-build:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Set up Flutter on Ubuntu
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 'stable'

    - name: Install dependencies on Ubuntu
      run: flutter pub get

    - name: Build universal APK
      run: flutter build apk --release

    - name: Build split ABI APKs
      run: flutter build apk --release --split-per-abi

    # 上传构建的 APK 到 Release
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload universal APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: CloudOTP-${{ github.ref_name }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload arm64-v8a APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
        asset_name: CloudOTP-${{ github.ref_name }}-arm64-v8a.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload armeabi-v7a APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
        asset_name: CloudOTP-${{ github.ref_name }}-armeabi-v7a.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload x86_64 APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-x86_64-release.apk
        asset_name: CloudOTP-${{ github.ref_name }}-x86_64.apk
        asset_content_type: application/vnd.android.package-archive

  # Windows 构建任务
  windows-build:
    runs-on: windows-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Set up Flutter on Windows
      uses: subosito/flutter-action@v2
      with:
        flutter-version: 'stable'

    - name: Install dependencies on Windows
      run: flutter pub get

    - name: Build Windows executable
      run: flutter build windows --release

    - name: Install Inno Setup
      run: |
        choco install innosetup

    - name: Copy DLL files
      run: |
        cp tools/dll/* build/windows/runner/Release/

    - name: Zip Windows release
      run: |
        cd build/windows/runner/Release
        zip -r ../../../CloudOTP-${{ github.ref_name }}.zip .

    - name: Run Inno Setup
      run: |
        "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" tools/CloudOTP.iss
      env:
        VERSION: ${{ github.ref_name }}

    - name: Upload Windows ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/CloudOTP-${{ github.ref_name }}.zip
        asset_name: CloudOTP-${{ github.ref_name }}.zip
        asset_content_type: application/zip

    - name: Upload Windows installer to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: tools/Output/CloudOTP-${{ github.ref_name }}.exe
        asset_name: CloudOTP-${{ github.ref_name }}.exe
        asset_content_type: application/vnd.microsoft.portable-executable
