name: Build and Release CloudOTP Application

on:
  push:
    tags:
      - 'V*.*.*'

jobs:
  android-build:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Set up Flutter on Ubuntu
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: 3.24.0
      - run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev

    - name: Install dependencies on Ubuntu
      run: |
        flutter doctor -v
        flutter pub get
        dart run intl_utils:generate

    - name: Install OpenJDK 17
      run: |
        sudo apt-get update && sudo apt-get install openjdk-17-jdk
        sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
        sudo update-alternatives --set javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac
        java -version

    - name: Build universal APK
      run: flutter build apk --release

    - name: Build split ABI APKs
      run: flutter build apk --release --split-per-abi

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload universal APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: CloudOTP-${{ github.ref_name }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload arm64-v8a APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
        asset_name: CloudOTP-${{ github.ref_name }}-arm64-v8a.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload armeabi-v7a APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
        asset_name: CloudOTP-${{ github.ref_name }}-armeabi-v7a.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload x86_64 APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-x86_64-release.apk
        asset_name: CloudOTP-${{ github.ref_name }}-x86_64.apk
        asset_content_type: application/vnd.android.package-archive

  windows-build:
    runs-on: windows-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Set up Flutter on Windows
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: 3.24.0

    - name: Install dependencies on Windows
      run: |
        flutter doctor -v
        flutter pub get
        dart run intl_utils:generate

    - name: Build Windows executable
      run: flutter build windows --release

    - name: Copy DLL files
      run: |
        cp tools/dll/* build/windows/runner/Release/

    - name: Zip Windows release
      run: |
        cd build/windows/runner/Release
        zip -r ../../../CloudOTP-${{ github.ref_name }}.zip .

    - name: Run Inno Setup
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.4
      with:
        path: tools/CloudOTP.iss
        options: /O ./ /F CloudOTP-${{ github.ref_name }}.exe

    - name: Upload Windows ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/CloudOTP-${{ github.ref_name }}.zip
        asset_name: CloudOTP-${{ github.ref_name }}.zip
        asset_content_type: application/zip

    - name: Upload Windows installer to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: tools/Output/CloudOTP-${{ github.ref_name }}.exe
        asset_name: CloudOTP-${{ github.ref_name }}.exe
        asset_content_type: application/vnd.microsoft.portable-executable
